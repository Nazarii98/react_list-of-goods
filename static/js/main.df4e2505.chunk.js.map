{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleReverse","setState","handleSortAlphabetically","ALPHABET","handleSortByLength","LENGTH","handleReset","goods","visibleGoods","sort","good1","good2","length","reverse","getReorderedGoods","this","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,cAAgB,WACd,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,yBAA2B,WACzB,EAAKD,SAAS,CACZH,SAAUL,EAASU,YAdzB,EAkBEC,mBAAqB,WACnB,EAAKH,SAAS,CACZH,SAAUL,EAASY,UApBzB,EAwBEC,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,IAAMQ,EA/DH,SACLA,EADK,GAGJ,IADCT,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOD,GAEzB,OAAQT,GACN,KAAKL,EAASU,SACZK,EAAaC,OACb,MAEF,KAAKhB,EAASY,OACZG,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAW7D,OAJIf,GACFW,EAAaK,UAGRL,EAwCSM,CAAkBpB,EAAiBqB,KAAKnB,OAGpDI,EAIEe,KAJFf,cACAE,EAGEa,KAHFb,yBACAE,EAEEW,KAFFX,mBACAE,EACES,KADFT,YAGF,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWD,KAAKnB,MAAME,WAAaL,EAASU,SACxC,2BACA,0BACJe,QAAShB,EALX,iCAUA,wBACEe,KAAK,SACLD,UAAWD,KAAKnB,MAAME,WAAaL,EAASY,OACxC,8BACA,6BACJa,QAASd,EALX,4BAUA,wBACEa,KAAK,SACLD,UAAWD,KAAKnB,MAAMC,WAClB,8BACA,6BACJqB,QAASlB,EALX,uBAU4B,IAA1Be,KAAKnB,MAAMC,YACVkB,KAAKnB,MAAME,WAAaL,EAASM,OAEhC,wBACEkB,KAAK,SACLD,UAAU,4BACVE,QAASZ,EAHX,sBAUN,6BACE,mCAEIC,EAAMY,KAAI,SAAAC,GAAI,OACZ,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBA3FzB,GAAyBC,aCxDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.df4e2505.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleSortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleSortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    const {\n      handleReverse,\n      handleSortAlphabetically,\n      handleSortByLength,\n      handleReset,\n    } = this;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={this.state.sortType === SortType.ALPHABET\n              ? 'button is-info is-active'\n              : 'button is-info is-light'}\n            onClick={handleSortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.sortType === SortType.LENGTH\n              ? 'button is-success is-active'\n              : 'button is-success is-light'}\n            onClick={handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.isReversed\n              ? 'button is-warning is-active'\n              : 'button is-warning is-light'}\n            onClick={handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.isReversed !== false\n          || this.state.sortType !== SortType.NONE)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={handleReset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <>\n            {\n              goods.map(good => (\n                <li key={good} data-cy=\"Good\">{good}</li>\n              ))\n            }\n          </>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}